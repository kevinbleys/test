{"version":3,"file":"main.fd227a61e492613722ce.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAmD;AACS;AAClC;AAAA;AAEX,SAASY,qBAAqBA,CAAA,EAAG;EAAAC,EAAA;EAC9C,MAAMC,QAAQ,GAAGV,6DAAW,CAAC,CAAC;EAC9B,MAAMW,QAAQ,GAAGZ,6DAAW,CAAC,CAAC;EAC9B,MAAM;IAAEa,EAAE;IAAEC,GAAG;IAAEC,MAAM;IAAEC,aAAa;IAAEC,KAAK;IAAEC;EAAgB,CAAC,GAAGP,QAAQ,CAACQ,KAAK,IAAI,CAAC,CAAC;EAEvF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGvB,+CAAQ,CAAC,SAAS,CAAC;EAE/CC,gDAAS,CAAC,MAAM;IACd,IAAI,CAACc,EAAE,EAAE;;IAET;IACA,MAAMS,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMrB,6CAAK,CAACsB,GAAG,CAAC,mCAAmCX,EAAE,EAAE,CAAC;QAEzE,IAAIU,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;UACzB,MAAMC,cAAc,GAAGJ,QAAQ,CAACE,IAAI,CAACG,QAAQ,CAACR,MAAM;UAEpD,IAAIO,cAAc,KAAK,MAAM,IAAIA,cAAc,KAAK,QAAQ,EAAE;YAC5DN,SAAS,CAACM,cAAc,CAAC;;YAEzB;YACAE,UAAU,CAAC,MAAM;cACfjB,QAAQ,CAAC,GAAG,CAAC;YACf,CAAC,EAAE,IAAI,CAAC;UACV;QACF;MACF,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACnE;IACF,CAAC;;IAED;IACA,MAAME,UAAU,GAAGC,WAAW,CAACX,kBAAkB,EAAE,IAAI,CAAC;;IAExD;IACA,OAAO,MAAMY,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,CAACnB,EAAE,EAAED,QAAQ,CAAC,CAAC;;EAElB;EACA,IAAI,CAACC,EAAE,IAAI,CAACC,GAAG,IAAI,CAACC,MAAM,EAAE;IAC1BH,QAAQ,CAAC,aAAa,CAAC;IACvB,OAAO,IAAI;EACb;EAEA,MAAMuB,UAAU,GAAIC,UAAU,IAAK;IACjC,MAAMC,OAAO,GAAG;MAAEC,GAAG,EAAE,SAAS;MAAEC,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAU,CAAC;IACrE,OAAO,IAAIC,IAAI,CAACL,UAAU,CAAC,CAACM,kBAAkB,CAAC,OAAO,EAAEL,OAAO,CAAC;EAClE,CAAC;EAED,oBACEjC,sDAAA;IAAKuC,SAAS,EAAC,wBAAwB;IAAAC,QAAA,eACrCpC,uDAAA;MAAKmC,SAAS,EAAC,mBAAmB;MAAAC,QAAA,GAC/BxB,MAAM,KAAK,MAAM,gBAChBZ,uDAAA,CAAAF,uDAAA;QAAAsC,QAAA,gBACExC,sDAAA;UAAIuC,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAiB,CAAI,CAAC,eACpDxC,sDAAA;UAAAwC,QAAA,EAAG;QAAwC,CAAG,CAAC,eAC/CxC,sDAAA;UAAAwC,QAAA,EAAG;QAAkD,CAAG,CAAC;MAAA,CACzD,CAAC,GACDxB,MAAM,KAAK,QAAQ,gBACrBZ,uDAAA,CAAAF,uDAAA;QAAAsC,QAAA,gBACExC,sDAAA;UAAIuC,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAC;QAAe,CAAI,CAAC,eACnDxC,sDAAA;UAAAwC,QAAA,EAAG;QAA4B,CAAG,CAAC,eACnCxC,sDAAA;UAAAwC,QAAA,EAAG;QAAkD,CAAG,CAAC;MAAA,CACzD,CAAC,gBAEHpC,uDAAA,CAAAF,uDAAA;QAAAsC,QAAA,gBACExC,sDAAA;UAAAwC,QAAA,EAAI;QAAwB,CAAI,CAAC,eACjCxC,sDAAA;UAAAwC,QAAA,EAAG;QAAgF,CAAG,CAAC,eACvFxC,sDAAA;UAAGuC,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAC;QAAkE,CAAG,CAAC;MAAA,CACpG,CACH,eAEDpC,uDAAA;QAAKmC,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvBxC,sDAAA;UAAAwC,QAAA,EAAI;QAAa,CAAI,CAAC,eACtBpC,uDAAA;UAAKmC,SAAS,EAAC,UAAU;UAAAC,QAAA,gBAACxC,sDAAA;YAAAwC,QAAA,EAAM;UAAK,CAAM,CAAC,eAAAxC,sDAAA;YAAAwC,QAAA,EAAO9B;UAAG,CAAO,CAAC;QAAA,CAAK,CAAC,eACpEN,uDAAA;UAAKmC,SAAS,EAAC,UAAU;UAAAC,QAAA,gBAACxC,sDAAA;YAAAwC,QAAA,EAAM;UAAQ,CAAM,CAAC,eAAAxC,sDAAA;YAAAwC,QAAA,EAAO7B;UAAM,CAAO,CAAC;QAAA,CAAK,CAAC,eAC1EP,uDAAA;UAAKmC,SAAS,EAAC,UAAU;UAAAC,QAAA,gBAACxC,sDAAA;YAAAwC,QAAA,EAAM;UAAmB,CAAM,CAAC,eAAAxC,sDAAA;YAAAwC,QAAA,EAAOT,UAAU,CAACnB,aAAa;UAAC,CAAO,CAAC;QAAA,CAAK,CAAC,eACxGR,uDAAA;UAAKmC,SAAS,EAAC,UAAU;UAAAC,QAAA,gBAACxC,sDAAA;YAAAwC,QAAA,EAAM;UAAO,CAAM,CAAC,eAAAxC,sDAAA;YAAAwC,QAAA,EAAO3B,KAAK,KAAK,CAAC,GAAG,SAAS,GAAG,GAAGA,KAAK;UAAG,CAAO,CAAC;QAAA,CAAK,CAAC,eACxGT,uDAAA;UAAKmC,SAAS,EAAC,UAAU;UAAAC,QAAA,gBAACxC,sDAAA;YAAAwC,QAAA,EAAM;UAAqB,CAAM,CAAC,eAAAxC,sDAAA;YAAAwC,QAAA,EAAO1B;UAAe,CAAO,CAAC;QAAA,CAAK,CAAC;MAAA,CAC7F,CAAC;IAAA,CACH;EAAC,CACH,CAAC;AAEV;AAACR,EAAA,CApFuBD,qBAAqB;EAAA,QAC1BR,yDAAW,EACXD,yDAAW;AAAA;AAAA6C,EAAA,GAFNpC,qBAAqB;AAAA,IAAAoC,EAAA;AAAAC,sCAAA,CAAAD,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCJ7C","sources":["webpack://tablet-ui/./src/components/NonMemberConfirmation.jsx","webpack://tablet-ui/webpack/runtime/getFullHash"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport default function NonMemberConfirmation() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { id, nom, prenom, dateNaissance, tarif, methodePaiement } = location.state || {};\r\n  \r\n  const [status, setStatus] = useState('pending');\r\n  \r\n  useEffect(() => {\r\n    if (!id) return;\r\n    \r\n    // Fonction pour vérifier le statut du paiement\r\n    const checkPaymentStatus = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:4000/presences/${id}`);\r\n        \r\n        if (response.data.success) {\r\n          const presenceStatus = response.data.presence.status;\r\n          \r\n          if (presenceStatus === 'Payé' || presenceStatus === 'Annulé') {\r\n            setStatus(presenceStatus);\r\n            \r\n            // Rediriger vers la page d'accueil après 2 secondes\r\n            setTimeout(() => {\r\n              navigate('/');\r\n            }, 2000);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Erreur lors de la vérification du statut:', error);\r\n      }\r\n    };\r\n    \r\n    // Vérifier le statut toutes les 2 secondes\r\n    const intervalId = setInterval(checkPaymentStatus, 2000);\r\n    \r\n    // Nettoyer l'intervalle lors du démontage du composant\r\n    return () => clearInterval(intervalId);\r\n  }, [id, navigate]);\r\n  \r\n  // Rediriger si les données sont manquantes\r\n  if (!id || !nom || !prenom) {\r\n    navigate('/non-member');\r\n    return null;\r\n  }\r\n  \r\n  const formatDate = (dateString) => {\r\n    const options = { day: '2-digit', month: '2-digit', year: 'numeric' };\r\n    return new Date(dateString).toLocaleDateString('fr-FR', options);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"confirmation-container\">\r\n      <div className=\"confirmation-card\">\r\n        {status === 'Payé' ? (\r\n          <>\r\n            <h2 className=\"success-title\">Paiement validé !</h2>\r\n            <p>Votre paiement a été validé avec succès.</p>\r\n            <p>Vous allez être redirigé vers la page d'accueil...</p>\r\n          </>\r\n        ) : status === 'Annulé' ? (\r\n          <>\r\n            <h2 className=\"canceled-title\">Paiement annulé</h2>\r\n            <p>Votre paiement a été annulé.</p>\r\n            <p>Vous allez être redirigé vers la page d'accueil...</p>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h2>En attente de validation</h2>\r\n            <p>Votre demande a été enregistrée et est en attente de validation par un bénévole.</p>\r\n            <p className=\"highlight-text\">Veuillez vous présenter à l'accueil pour finaliser votre paiement.</p>\r\n          </>\r\n        )}\r\n        \r\n        <div className=\"info-box\">\r\n          <h3>Récapitulatif</h3>\r\n          <div className=\"info-row\"><span>Nom :</span><span>{nom}</span></div>\r\n          <div className=\"info-row\"><span>Prénom :</span><span>{prenom}</span></div>\r\n          <div className=\"info-row\"><span>Date de naissance :</span><span>{formatDate(dateNaissance)}</span></div>\r\n          <div className=\"info-row\"><span>Tarif :</span><span>{tarif === 0 ? 'Gratuit' : `${tarif}€`}</span></div>\r\n          <div className=\"info-row\"><span>Méthode de paiement :</span><span>{methodePaiement}</span></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","__webpack_require__.h = () => (\"dfac957d28fba16abc40\")"],"names":["React","useState","useEffect","useNavigate","useLocation","axios","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","NonMemberConfirmation","_s","location","navigate","id","nom","prenom","dateNaissance","tarif","methodePaiement","state","status","setStatus","checkPaymentStatus","response","get","data","success","presenceStatus","presence","setTimeout","error","console","intervalId","setInterval","clearInterval","formatDate","dateString","options","day","month","year","Date","toLocaleDateString","className","children","_c","$RefreshReg$"],"sourceRoot":""}