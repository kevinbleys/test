{"version":3,"file":"main.74daeaa4fc4e5f22dc57.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AACO,MAAMA,SAAS,GAAIC,SAAS,IAAK;EACtC,IAAI;IACF;IACA,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAACF,SAAS,CAAC;;IAElC;IACAC,KAAK,CAACE,MAAM,GAAG,GAAG;;IAElB;IACAF,KAAK,CAACG,IAAI,CAAC,CAAC,CACTC,IAAI,CAAC,MAAM;MACVC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEP,SAAS,CAAC;IACjD,CAAC,CAAC,CACDQ,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACG,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC3D,CAAC,CAAC;EACN,CAAC,CAAC,OAAOA,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;EACvE;AACF,CAAC;;AAED;AACO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC;EACA,MAAMC,UAAU,GAAG,oBAAoB;EACvCZ,SAAS,CAACY,UAAU,CAAC;AACvB,CAAC;;AAED;AACO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjC;EACA,MAAMC,QAAQ,GAAG,kBAAkB;EACnCd,SAAS,CAACc,QAAQ,CAAC;AACrB,CAAC;;AAED;AACO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EACpC;EACA,MAAMC,WAAW,GAAG,qBAAqB;EACzChB,SAAS,CAACgB,WAAW,CAAC;AACxB,CAAC;;AAED;AACO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjC,IAAI;IACF;IACA,MAAMC,WAAW,GAAG,IAAIf,KAAK,CAAC,oBAAoB,CAAC;IACnDe,WAAW,CAACC,OAAO,GAAG,MAAM;;IAE5B;IACA,MAAMC,SAAS,GAAG,IAAIjB,KAAK,CAAC,kBAAkB,CAAC;IAC/CiB,SAAS,CAACD,OAAO,GAAG,MAAM;IAE1BZ,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EACjC,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;EACjE;AACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC9DD","sources":["webpack://tablet-ui/./src/utils/soundUtils.js","webpack://tablet-ui/webpack/runtime/getFullHash"],"sourcesContent":["/**\r\n * Utilitaire pour jouer des sons dans l'application\r\n */\r\n\r\n// Fonction pour jouer un son\r\nexport const playSound = (soundPath) => {\r\n  try {\r\n    // Créer un nouvel objet Audio\r\n    const audio = new Audio(soundPath);\r\n    \r\n    // Définir le volume (0.0 à 1.0)\r\n    audio.volume = 0.8;\r\n    \r\n    // Jouer le son\r\n    audio.play()\r\n      .then(() => {\r\n        console.log('Son joué avec succès:', soundPath);\r\n      })\r\n      .catch(error => {\r\n        console.error('Erreur lors de la lecture du son:', error);\r\n      });\r\n  } catch (error) {\r\n    console.error('Erreur lors de la création de l\\'objet Audio:', error);\r\n  }\r\n};\r\n\r\n// Fonction spécifique pour le son buzzer\r\nexport const playBuzzerSound = () => {\r\n  // Chemin vers le fichier MP3 buzzer dans le dossier public/assets\r\n  const buzzerPath = '/assets/buzzer.mp3';\r\n  playSound(buzzerPath);\r\n};\r\n\r\n// Fonction spécifique pour le son de cloche (bell)\r\nexport const playBellSound = () => {\r\n  // Chemin vers le fichier MP3 bell dans le dossier public/assets\r\n  const bellPath = '/assets/bell.mp3';\r\n  playSound(bellPath);\r\n};\r\n\r\n// Fonction pour jouer un son de succès (optionnel)\r\nexport const playSuccessSound = () => {\r\n  // Vous pouvez ajouter un son de succès si disponible\r\n  const successPath = '/assets/success.mp3';\r\n  playSound(successPath);\r\n};\r\n\r\n// Fonction pour pré-charger les sons (optionnel mais recommandé)\r\nexport const preloadSounds = () => {\r\n  try {\r\n    // Pré-charger le son buzzer\r\n    const buzzerAudio = new Audio('/assets/buzzer.mp3');\r\n    buzzerAudio.preload = 'auto';\r\n    \r\n    // Pré-charger le son bell\r\n    const bellAudio = new Audio('/assets/bell.mp3');\r\n    bellAudio.preload = 'auto';\r\n    \r\n    console.log('Sons pré-chargés');\r\n  } catch (error) {\r\n    console.error('Erreur lors du pré-chargement des sons:', error);\r\n  }\r\n};\r\n","__webpack_require__.h = () => (\"64d48800da707659200f\")"],"names":["playSound","soundPath","audio","Audio","volume","play","then","console","log","catch","error","playBuzzerSound","buzzerPath","playBellSound","bellPath","playSuccessSound","successPath","preloadSounds","buzzerAudio","preload","bellAudio"],"sourceRoot":""}