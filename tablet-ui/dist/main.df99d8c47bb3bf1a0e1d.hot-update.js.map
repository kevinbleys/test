{"version":3,"file":"main.df99d8c47bb3bf1a0e1d.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;AAA0B;AAE1B,MAAMC,OAAO,GAAG,wCAAwC;AACxD,MAAMC,WAAW,GAAG;EAClB,UAAU,EAAE,kCAAkC;EAC9C,WAAW,EAAE;AACf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,eAAe,GAAG,MAAAA,CAAOC,GAAG,EAAEC,MAAM,KAAK;EACpD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,6CAAK,CAACO,GAAG,CAACN,OAAO,EAAE;MAAEO,OAAO,EAAEN;IAAY,CAAC,CAAC;IAEnE,IAAII,QAAQ,CAACG,MAAM,KAAK,GAAG,IAAIC,KAAK,CAACC,OAAO,CAACL,QAAQ,CAACM,IAAI,CAAC,EAAE;MAC3D;MACA,MAAMC,MAAM,GAAGP,QAAQ,CAACM,IAAI,CAACE,IAAI,CAC/BC,CAAC,IACCA,CAAC,CAACC,QAAQ,EAAEC,WAAW,CAAC,CAAC,KAAKb,GAAG,CAACa,WAAW,CAAC,CAAC,IAC/CF,CAAC,CAACG,SAAS,EAAED,WAAW,CAAC,CAAC,KAAKZ,MAAM,CAACY,WAAW,CAAC,CACtD,CAAC;MACD,OAAOJ,MAAM,IAAI,IAAI;IACvB,CAAC,MAAM;MACL,MAAM,IAAIM,KAAK,CAAC,uCAAuC,CAAC;IAC1D;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIA,KAAK,CAACd,QAAQ,EAAE;MAClB,MAAM,IAAIa,KAAK,CAACC,KAAK,CAACd,QAAQ,CAACM,IAAI,EAAES,OAAO,IAAI,wBAAwBD,KAAK,CAACd,QAAQ,CAACG,MAAM,GAAG,CAAC;IACnG,CAAC,MAAM,IAAIW,KAAK,CAACE,OAAO,EAAE;MACxB,MAAM,IAAIH,KAAK,CAAC,sDAAsD,CAAC;IACzE,CAAC,MAAM;MACL,MAAM,IAAIA,KAAK,CAAC,+CAA+C,CAAC;IAClE;EACF;AACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCtCD","sources":["webpack://tablet-ui/./src/services/api.js","webpack://tablet-ui/webpack/runtime/getFullHash"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'https://api.pepsup.com/api/v1/contacts';\r\nconst API_HEADERS = {\r\n  'HFAPIKEY': '0IOiLeibD6sF6sJtr17oB8VUKBG6NZ2U',\r\n  'APISECRET': 'odakfDvfUMOKpJAe92u76fqCWHtPvPlo'\r\n};\r\n\r\n/**\r\n * Récupère tous les contacts de l'association et filtre sur le nom/prénom.\r\n * @param {string} nom - Nom de famille à chercher.\r\n * @param {string} prenom - Prénom à chercher.\r\n * @returns {Promise<object|null>} - Le membre trouvé ou null si absent.\r\n */\r\nexport const checkMembership = async (nom, prenom) => {\r\n  try {\r\n    const response = await axios.get(API_URL, { headers: API_HEADERS });\r\n\r\n    if (response.status === 200 && Array.isArray(response.data)) {\r\n      // Filtrage côté client sur nom et prénom (insensible à la casse)\r\n      const membre = response.data.find(\r\n        m =>\r\n          m.lastname?.toLowerCase() === nom.toLowerCase() &&\r\n          m.firstname?.toLowerCase() === prenom.toLowerCase()\r\n      );\r\n      return membre || null;\r\n    } else {\r\n      throw new Error(\"Réponse inattendue de l'API Pep's Up.\");\r\n    }\r\n  } catch (error) {\r\n    if (error.response) {\r\n      throw new Error(error.response.data?.message || `Erreur API Pep's Up [${error.response.status}]`);\r\n    } else if (error.request) {\r\n      throw new Error(\"Pas de réponse du serveur - Vérifiez votre connexion\");\r\n    } else {\r\n      throw new Error(\"Erreur lors de la configuration de la requête\");\r\n    }\r\n  }\r\n};\r\n","__webpack_require__.h = () => (\"66736095c4af7a1fd16b\")"],"names":["axios","API_URL","API_HEADERS","checkMembership","nom","prenom","response","get","headers","status","Array","isArray","data","membre","find","m","lastname","toLowerCase","firstname","Error","error","message","request"],"sourceRoot":""}