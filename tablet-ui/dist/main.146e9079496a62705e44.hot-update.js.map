{"version":3,"file":"main.146e9079496a62705e44.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAmD;AACzB;AACI;AAAA;AAEf,SAASQ,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,+CAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,+CAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,+CAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,+CAAQ,CAAC,EAAE,CAAC;;EAExD;EACA,MAAMiB,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjCL,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMhB,6CAAK,CAACiB,GAAG,CAAC,mCAAmC,CAAC;MACrET,aAAa,CAACQ,QAAQ,CAACE,IAAI,CAACX,UAAU,CAAC;MACvCK,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZP,QAAQ,CAAC,2CAA2C,CAAC;MACrDQ,OAAO,CAACT,KAAK,CAACQ,GAAG,CAAC;IACpB,CAAC,SAAS;MACRT,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACAX,gDAAS,CAAC,MAAM;IACdgB,cAAc,CAAC,CAAC;;IAEhB;IACA,MAAMM,UAAU,GAAGC,WAAW,CAACP,cAAc,EAAE,KAAK,CAAC;;IAErD;IACA,OAAO,MAAMQ,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,uBAAuB,GAAG,MAAOC,EAAE,IAAK;IAC5C,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMhB,6CAAK,CAAC0B,IAAI,CAAC,qCAAqCD,EAAE,OAAO,CAAC;MACjF,IAAIT,QAAQ,CAACE,IAAI,CAACS,OAAO,EAAE;QACzBb,iBAAiB,CAAC,6BAA6B,CAAC;QAChD;QACAC,cAAc,CAAC,CAAC;;QAEhB;QACAa,UAAU,CAAC,MAAM;UACfd,iBAAiB,CAAC,EAAE,CAAC;QACvB,CAAC,EAAE,IAAI,CAAC;MACV;IACF,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZP,QAAQ,CAAC,0CAA0C,CAAC;MACpDQ,OAAO,CAACT,KAAK,CAACQ,GAAG,CAAC;IACpB;EACF,CAAC;;EAED;EACA,MAAMU,UAAU,GAAIC,UAAU,IAAK;IACjC,MAAMC,OAAO,GAAG;MAAEC,GAAG,EAAE,SAAS;MAAEC,KAAK,EAAE,SAAS;MAAEC,IAAI,EAAE,SAAS;MAAEC,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAU,CAAC;IACzG,OAAO,IAAIC,IAAI,CAACP,UAAU,CAAC,CAACQ,kBAAkB,CAAC,OAAO,EAAEP,OAAO,CAAC;EAClE,CAAC;EAED,oBACE3B,uDAAA;IAAKmC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BtC,sDAAA;MAAAsC,QAAA,EAAI;IAAgC,CAAI,CAAC,EAExC3B,cAAc,iBACbX,sDAAA;MAAKqC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAE3B;IAAc,CAAM,CACvD,EAEAF,KAAK,iBACJT,sDAAA;MAAKqC,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAE7B;IAAK,CAAM,CAC5C,eAEDT,sDAAA;MACEqC,SAAS,EAAC,gBAAgB;MAC1BE,OAAO,EAAE1B,cAAe;MACxB2B,QAAQ,EAAEjC,OAAQ;MAAA+B,QAAA,EAEjB/B,OAAO,GAAG,eAAe,GAAG;IAAY,CACnC,CAAC,EAERA,OAAO,gBACNP,sDAAA;MAAKqC,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAyB,CAAK,CAAC,gBAExDtC,sDAAA;MAAKqC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7BjC,UAAU,CAACoC,MAAM,KAAK,CAAC,gBACtBzC,sDAAA;QAAGqC,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAA4B,CAAG,CAAC,gBAEvDpC,uDAAA;QAAOmC,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC9BtC,sDAAA;UAAAsC,QAAA,eACEpC,uDAAA;YAAAoC,QAAA,gBACEtC,sDAAA;cAAAsC,QAAA,EAAI;YAAG,CAAI,CAAC,eACZtC,sDAAA;cAAAsC,QAAA,EAAI;YAAM,CAAI,CAAC,eACftC,sDAAA;cAAAsC,QAAA,EAAI;YAAiB,CAAI,CAAC,eAC1BtC,sDAAA;cAAAsC,QAAA,EAAI;YAAG,CAAI,CAAC,eACZtC,sDAAA;cAAAsC,QAAA,EAAI;YAAK,CAAI,CAAC,eACdtC,sDAAA;cAAAsC,QAAA,EAAI;YAAmB,CAAI,CAAC,eAC5BtC,sDAAA;cAAAsC,QAAA,EAAI;YAAM,CAAI,CAAC,eACftC,sDAAA;cAAAsC,QAAA,EAAI;YAAqB,CAAI,CAAC,eAC9BtC,sDAAA;cAAAsC,QAAA,EAAI;YAAO,CAAI,CAAC;UAAA,CACd;QAAC,CACA,CAAC,eACRtC,sDAAA;UAAAsC,QAAA,EACGjC,UAAU,CAACqC,GAAG,CAAEC,MAAM,iBACrBzC,uDAAA;YAAoBmC,SAAS,EAAEM,MAAM,CAACC,IAAI,GAAG,UAAU,GAAG,EAAG;YAAAN,QAAA,gBAC3DtC,sDAAA;cAAAsC,QAAA,EAAKK,MAAM,CAACE;YAAG,CAAK,CAAC,eACrB7C,sDAAA;cAAAsC,QAAA,EAAKK,MAAM,CAACG;YAAM,CAAK,CAAC,eACxB9C,sDAAA;cAAAsC,QAAA,EAAK,IAAIH,IAAI,CAACQ,MAAM,CAACI,aAAa,CAAC,CAACX,kBAAkB,CAAC,OAAO;YAAC,CAAK,CAAC,eACrEpC,sDAAA;cAAAsC,QAAA,EAAKK,MAAM,CAACK;YAAG,CAAK,CAAC,eACrBhD,sDAAA;cAAAsC,QAAA,EAAKK,MAAM,CAACM,KAAK,KAAK,CAAC,GAAG,SAAS,GAAG,GAAGN,MAAM,CAACM,KAAK;YAAG,CAAK,CAAC,eAC9DjD,sDAAA;cAAAsC,QAAA,EAAKK,MAAM,CAACO;YAAe,CAAK,CAAC,eACjClD,sDAAA;cAAAsC,QAAA,EAAKK,MAAM,CAACC,IAAI,GAAG,MAAM,GAAG;YAAY,CAAK,CAAC,eAC9C5C,sDAAA;cAAAsC,QAAA,EAAKX,UAAU,CAACgB,MAAM,CAACQ,WAAW;YAAC,CAAK,CAAC,eACzCjD,uDAAA;cAAAoC,QAAA,GACG,CAACK,MAAM,CAACC,IAAI,iBACX5C,sDAAA;gBACEqC,SAAS,EAAC,YAAY;gBACtBE,OAAO,EAAEA,CAAA,KAAMjB,uBAAuB,CAACqB,MAAM,CAACpB,EAAE,CAAE;gBAAAe,QAAA,EACnD;cAED,CAAQ,CACT,EACAK,MAAM,CAACC,IAAI,iBACV1C,uDAAA;gBAAMmC,SAAS,EAAC,YAAY;gBAAAC,QAAA,GAAC,aAAQ,EAACX,UAAU,CAACgB,MAAM,CAACS,QAAQ,CAAC;cAAA,CAAO,CACzE;YAAA,CACC,CAAC;UAAA,GArBET,MAAM,CAACpB,EAsBZ,CACL;QAAC,CACG,CAAC;MAAA,CACH;IACR,CACE,CACN;EAAA,CACE,CAAC;AAEV;AAACnB,EAAA,CApIuBD,cAAc;AAAAkD,EAAA,GAAdlD,cAAc;AAAA,IAAAkD,EAAA;AAAAC,sCAAA,CAAAD,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCJtC","sources":["webpack://tablet-ui/./src/components/NonMemberAdmin.jsx","webpack://tablet-ui/webpack/runtime/getFullHash"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './NonMemberAdmin.css';\r\n\r\nexport default function NonMemberAdmin() {\r\n  const [nonMembers, setNonMembers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  // Charger les non-membres\r\n  const loadNonMembers = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get('http://localhost:4000/non-members');\r\n      setNonMembers(response.data.nonMembers);\r\n      setError('');\r\n    } catch (err) {\r\n      setError(\"Erreur lors du chargement des non-membres\");\r\n      console.error(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Charger les données au chargement de la page\r\n  useEffect(() => {\r\n    loadNonMembers();\r\n    \r\n    // Actualiser les données toutes les 30 secondes\r\n    const intervalId = setInterval(loadNonMembers, 30000);\r\n    \r\n    // Nettoyage à la désinscription\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  // Valider le paiement\r\n  const handlePaymentValidation = async (id) => {\r\n    try {\r\n      const response = await axios.post(`http://localhost:4000/non-members/${id}/paid`);\r\n      if (response.data.success) {\r\n        setSuccessMessage(\"Paiement validé avec succès\");\r\n        // Mettre à jour la liste\r\n        loadNonMembers();\r\n        \r\n        // Effacer le message après 3 secondes\r\n        setTimeout(() => {\r\n          setSuccessMessage('');\r\n        }, 3000);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Erreur lors de la validation du paiement\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Formater la date\r\n  const formatDate = (dateString) => {\r\n    const options = { day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' };\r\n    return new Date(dateString).toLocaleDateString('fr-FR', options);\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <h2>Administration des Non-Adhérents</h2>\r\n      \r\n      {successMessage && (\r\n        <div className=\"success-message\">{successMessage}</div>\r\n      )}\r\n      \r\n      {error && (\r\n        <div className=\"error-message\">{error}</div>\r\n      )}\r\n      \r\n      <button \r\n        className=\"refresh-button\"\r\n        onClick={loadNonMembers}\r\n        disabled={loading}\r\n      >\r\n        {loading ? 'Chargement...' : 'Actualiser'}\r\n      </button>\r\n      \r\n      {loading ? (\r\n        <div className=\"loading\">Chargement des données...</div>\r\n      ) : (\r\n        <div className=\"table-container\">\r\n          {nonMembers.length === 0 ? (\r\n            <p className=\"no-data\">Aucun non-membre enregistré.</p>\r\n          ) : (\r\n            <table className=\"members-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Nom</th>\r\n                  <th>Prénom</th>\r\n                  <th>Date de naissance</th>\r\n                  <th>Âge</th>\r\n                  <th>Tarif</th>\r\n                  <th>Méthode de paiement</th>\r\n                  <th>Statut</th>\r\n                  <th>Date d'enregistrement</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {nonMembers.map((member) => (\r\n                  <tr key={member.id} className={member.paid ? 'paid-row' : ''}>\r\n                    <td>{member.nom}</td>\r\n                    <td>{member.prenom}</td>\r\n                    <td>{new Date(member.dateNaissance).toLocaleDateString('fr-FR')}</td>\r\n                    <td>{member.age}</td>\r\n                    <td>{member.tarif === 0 ? 'Gratuit' : `${member.tarif}€`}</td>\r\n                    <td>{member.methodePaiement}</td>\r\n                    <td>{member.paid ? 'Payé' : 'En attente'}</td>\r\n                    <td>{formatDate(member.dateCreated)}</td>\r\n                    <td>\r\n                      {!member.paid && (\r\n                        <button \r\n                          className=\"pay-button\"\r\n                          onClick={() => handlePaymentValidation(member.id)}\r\n                        >\r\n                          Valider paiement\r\n                        </button>\r\n                      )}\r\n                      {member.paid && (\r\n                        <span className=\"paid-label\">Payé le {formatDate(member.datePaid)}</span>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","__webpack_require__.h = () => (\"46561b8c6702789d0b2a\")"],"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","NonMemberAdmin","_s","nonMembers","setNonMembers","loading","setLoading","error","setError","successMessage","setSuccessMessage","loadNonMembers","response","get","data","err","console","intervalId","setInterval","clearInterval","handlePaymentValidation","id","post","success","setTimeout","formatDate","dateString","options","day","month","year","hour","minute","Date","toLocaleDateString","className","children","onClick","disabled","length","map","member","paid","nom","prenom","dateNaissance","age","tarif","methodePaiement","dateCreated","datePaid","_c","$RefreshReg$"],"sourceRoot":""}