@echo off
title CLIMBING CLUB ENHANCED FEATURES INSTALLATION
color 0A

echo ================================================
echo    CLIMBING CLUB ENHANCED FEATURES
echo    Installation & Deployment Script
echo ================================================
echo.

echo This script will install 3 major new features:
echo.
echo 1Ô∏è‚É£ MEMBER LOGIN FAILURE TRACKING
echo    - Tracks failed login attempts 
echo    - Logs "membre non existant" and "membre pas encore pay√©"
echo    - Exports to Excel for analysis
echo.
echo 2Ô∏è‚É£ RETURNING VISITOR FLOW  
echo    - Fast track for returning non-members
echo    - Only requires name/surname/birthdate  
echo    - Direct to payment (skips level/assurance)
echo.
echo 3Ô∏è‚É£ ENHANCED SUCCESS MESSAGES
echo    - Longer, clearer confirmation messages
echo    - Better visual feedback
echo    - Extended display times
echo.

set /p "confirm=Continue with installation? (y/n): "
if /i not "%confirm%"=="y" goto :end

echo.
echo ================================================
echo    STEP 1: DATABASE ENHANCEMENTS
echo ================================================
echo.

echo Creating enhanced database initialization script...
copy enhanced-db-init.js backend\enhanced-db-init.js >nul 2>&1
if %errorlevel% == 0 (
    echo ‚úÖ Database init script copied
) else (
    echo ‚ùå Failed to copy database script
    goto :error
)

echo Initializing enhanced database schema...
cd backend
node enhanced-db-init.js
if %errorlevel% == 0 (
    echo ‚úÖ Database schema updated successfully
) else (
    echo ‚ùå Database initialization failed
    cd..
    goto :error
)
cd..

echo.
echo ================================================  
echo    STEP 2: BACKEND API ENHANCEMENTS
echo ================================================
echo.

echo Installing required npm packages...
cd backend
npm install uuid
if %errorlevel% == 0 (
    echo ‚úÖ UUID package installed
) else (
    echo ‚ùå Failed to install UUID package
)
cd..

echo Adding enhanced backend routes...
echo.
echo Please manually add the routes from ENHANCED-BACKEND-ROUTES.js to your server.js file
echo The enhanced routes include:
echo - POST /members/check-enhanced (with failure logging)
echo - GET /returning-visitors/search  
echo - POST /returning-visitors
echo - POST /presences-enhanced (with access logging)
echo - GET /export/access-attempts
echo.
pause

echo.
echo ================================================
echo    STEP 3: FRONTEND COMPONENT INSTALLATION
echo ================================================
echo.

echo Installing new React components...

copy ReturningVisitorChoice.jsx tablet-ui\src\components\ReturningVisitorChoice.jsx >nul 2>&1
if %errorlevel% == 0 (
    echo ‚úÖ ReturningVisitorChoice.jsx installed
) else (
    echo ‚ùå Failed to install ReturningVisitorChoice component
)

copy ReturningVisitorForm.jsx tablet-ui\src\components\ReturningVisitorForm.jsx >nul 2>&1  
if %errorlevel% == 0 (
    echo ‚úÖ ReturningVisitorForm.jsx installed
) else (
    echo ‚ùå Failed to install ReturningVisitorForm component
)

echo.
echo ================================================
echo    STEP 4: ROUTING & API UPDATES  
echo ================================================
echo.

echo Please manually update these files with the enhanced versions:
echo.
echo FRONTEND FILES TO UPDATE:
echo ‚úÖ tablet-ui\src\App.js - Add new routes
echo ‚úÖ tablet-ui\src\components\HomePage.jsx - Redirect to visitor choice
echo ‚úÖ tablet-ui\src\components\MemberPage.jsx - Enhanced success messages
echo ‚úÖ tablet-ui\src\components\PaymentPage.jsx - Enhanced success messages  
echo ‚úÖ tablet-ui\src\services\apiService.js - Enhanced API calls
echo ‚úÖ tablet-ui\src\App.css - Add enhanced styles
echo.
echo All enhanced versions are available in the generated files.
echo.
pause

echo.
echo ================================================
echo    STEP 5: CSS STYLING ENHANCEMENTS
echo ================================================
echo.

echo Adding enhanced CSS styles...
echo Please add the styles from ENHANCED-STYLES.css to your App.css file
echo.
echo New styles include:
echo ‚úÖ Returning visitor choice buttons
echo ‚úÖ Enhanced success message animations
echo ‚úÖ Better error message styling  
echo ‚úÖ Payment confirmation improvements
echo ‚úÖ Mobile responsive design
echo.
pause

echo.
echo ================================================
echo    STEP 6: TESTING & VERIFICATION
echo ================================================
echo.

echo Testing database connection...
cd backend
node -e "
const sqlite3 = require('sqlite3').verbose();
const db = new sqlite3.Database('./data/climbing.db');
db.get('SELECT name FROM sqlite_master WHERE type=\'table\' AND name=\'access_attempts\'', (err, row) => {
    if (row) {
        console.log('‚úÖ access_attempts table exists');
    } else {
        console.log('‚ùå access_attempts table missing');
    }
});
db.get('SELECT name FROM sqlite_master WHERE type=\'table\' AND name=\'returning_visitors\'', (err, row) => {
    if (row) {
        console.log('‚úÖ returning_visitors table exists');  
    } else {
        console.log('‚ùå returning_visitors table missing');
    }
    db.close();
});
" 2>nul
cd..

echo.
echo Testing frontend compilation...
cd tablet-ui
npm run build >nul 2>&1
if %errorlevel% == 0 (
    echo ‚úÖ Frontend builds successfully
) else (
    echo ‚ö†Ô∏è Frontend build warnings (check manually)
)
cd..

echo.
echo ================================================
echo    INSTALLATION COMPLETE
echo ================================================
echo.

echo üéâ Enhanced features installation complete!
echo.
echo WHAT'S NEW:
echo.
echo 1Ô∏è‚É£ MEMBER LOGIN TRACKING:
echo    ‚Ä¢ Failed logins are logged to access_attempts table
echo    ‚Ä¢ Excel export available at /export/access-attempts  
echo    ‚Ä¢ Track "membre non existant" and "pas encore pay√©"
echo.
echo 2Ô∏è‚É£ RETURNING VISITOR FLOW:
echo    ‚Ä¢ New choice page after "je ne suis pas membre"
echo    ‚Ä¢ Fast track for returning visitors
echo    ‚Ä¢ Direct to payment (skips forms)
echo.
echo 3Ô∏è‚É£ ENHANCED MESSAGES:
echo    ‚Ä¢ 5-6 second success message display
echo    ‚Ä¢ Better visual feedback with animations
echo    ‚Ä¢ Clearer confirmation text
echo.
echo NEXT STEPS:
echo 1. Restart backend: npm start (in backend folder)
echo 2. Restart frontend: npm start (in tablet-ui folder)  
echo 3. Test the new visitor flow
echo 4. Verify member failure logging
echo 5. Check enhanced success messages
echo.
echo üöÄ Your climbing club software now has advanced features!
echo.
goto :end

:error
echo.
echo ‚ùå Installation failed. Please check the error messages above.
echo.

:end
pause